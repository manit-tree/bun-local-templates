(function(){"use strict";try{if(typeof document<"u"){var e=document.createElement("style");e.appendChild(document.createTextNode(".search-box-container{width:100%;position:relative}.search-box-container input[type=text]{box-sizing:border-box;width:100%;padding:8px 16px;font-family:inherit}.search-box-container input[type=text]:focus-visible{outline:0}.search-box-results{z-index:1000;opacity:0;transform-origin:top;scrollbar-width:thin;scrollbar-color:#ccc #fff;background:#fff;border:1px solid #ccc;border-radius:5px;width:100%;max-height:342px;transition:opacity .3s,transform .3s;position:absolute;top:100%;left:0;overflow:hidden auto;transform:scaleY(0);box-shadow:0 4px 8px #0003}.search-box-results.show{opacity:1;transform:scaleY(1)}.search-box-result-item{cursor:pointer;border-bottom:1px solid #eee;align-items:center;padding:12px 16px;transition:background-color .3s,transform .3s;display:flex}.search-box-result-item.active{background-color:#f3f3f3}._search-box-result-item:hover{background-color:#f0f0f0;transform:translate(5px)}.search-box-result-item a{color:#333;pointer-events:none;-webkit-user-select:none;user-select:none;font-weight:600;text-decoration:none}._search-box-result-item a:hover{text-decoration:underline}.search-box-results::-webkit-scrollbar{width:8px}.search-box-results::-webkit-scrollbar-track{background:#fff}.search-box-results::-webkit-scrollbar-thumb{background:#888;border-radius:10px}")),document.head.appendChild(e)}}catch(o){console.error("vite-plugin-css-injected-by-js",o)}})();
function m(l, s) {
  l.parentNode.insertBefore(s, l), s.appendChild(l);
}
let h = null;
class f {
  constructor(s, i) {
    this.handlers = [], this.container = document.createElement("div"), this.container.classList.add("search-box-container"), this.inputElement = document.getElementById(s), m(this.inputElement, this.container), this.items = i, this.resultsContainer = this.createResultsContainer(), this.init();
  }
  init() {
    if (!this.inputElement) {
      console.error(`Input element with id ${this.inputElement.id} not found.`);
      return;
    }
    Array.isArray(this.items) && (this.items = [...new Set(this.items)], this.items.sort()), this.container.querySelector(".search-box-results").addEventListener("mousemove", (s) => {
      let i = document.elementFromPoint(s.clientX, s.clientY);
      if (i.matches(".search-box-result-item") && i !== h) {
        let e = i.parentElement.querySelector(".active");
        e && e.classList.remove("active"), h = i, h.classList.add("active");
      }
    }), this.container.addEventListener("click", (s) => {
      var e;
      let i = s.target;
      if (i.matches(".search-box-result-item")) {
        s.preventDefault();
        let o = i.querySelector("a").innerText;
        if ((e = this.container.querySelector(".search-box-results")) == null || e.classList.remove("show"), this.inputElement.value = o, typeof this.handlers.search == "function") {
          let n = this.inputElement.value.trim();
          n != "" && this.handlers.search(n);
        }
      }
    }), this.inputElement.addEventListener("input", (s) => {
      this.performSearch();
    }), this.inputElement.addEventListener("keydown", (s) => {
      var a;
      let i = s.key, e;
      switch (i) {
        case "Tab":
          s.preventDefault(), e = this.container.querySelector(".search-box-results.show"), e && (e.querySelector(".search-box-result-item.active") || (a = e.querySelector(".search-box-result-item")) == null || a.classList.add("active"));
          break;
        case "ArrowUp":
          if (e = this.container.querySelector(".search-box-results.show"), e) {
            let t = e.querySelector(".search-box-result-item.active");
            if (t) {
              if (t.previousElementSibling && (t.classList.remove("active"), t = t.previousElementSibling, t)) {
                let r = t.offsetTop;
                r < e.scrollTop && (e.scrollTop = r), t.classList.add("active");
              }
            } else
              e.classList.remove("show"), e.focus();
          }
          break;
        case "ArrowDown":
          if (e = this.container.querySelector(".search-box-results.show"), e) {
            let t = e.querySelector(".search-box-result-item.active");
            if (t) {
              if (t.nextElementSibling && (t.classList.remove("active"), t = t.nextElementSibling, t)) {
                let r = t.offsetTop, c = t.offsetHeight, u = e.offsetHeight;
                r > e.scrollTop + u - 30 && (e.scrollTop = r - c * 6), t.classList.add("active");
              }
            } else {
              t = e.querySelector(".search-box-result-item"), t.classList.add("active");
              let r = t.offsetTop, c = t.offsetHeight;
              e.scrollTop = r - c;
            }
          }
          break;
        case "Enter":
          e = this.container.querySelector(".search-box-results.show"), e && e.classList.remove("show");
          let o = this.container.querySelector(".search-box-result-item.active"), n = s.target;
          if (o) {
            let r = o.querySelector("a").innerText;
            n.value = r, n.focus();
          }
          if (typeof this.handlers.search == "function") {
            let t = n.value.trim();
            t != "" && this.handlers.search(t);
          }
          break;
      }
    });
  }
  createResultsContainer() {
    const s = document.createElement("div");
    return s.className = "search-box-results", this.inputElement.parentElement.appendChild(s), s;
  }
  performSearch() {
    const s = this.inputElement.value.toLowerCase();
    if (this.resultsContainer.innerHTML = "", s.length === 0) {
      this.resultsContainer.classList.remove("show");
      return;
    }
    this.items.filter(
      (e) => e.toLowerCase().includes(s)
    ).forEach((e) => {
      const a = document.createElement("div");
      a.className = "search-box-result-item", a.innerHTML = `<a href="#">${e}</a>`, this.resultsContainer.appendChild(a);
    }), this.resultsContainer.classList.add("show");
  }
  on(s, i) {
    this.handlers[s] = i;
  }
}
export {
  f as default
};
//# sourceMappingURL=index.es.min.js.map
